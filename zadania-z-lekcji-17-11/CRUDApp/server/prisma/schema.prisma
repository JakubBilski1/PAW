generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  profile   UserProfile?
  posts     Post[]
}

model UserProfile {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  firstName String
  lastName  String
  nickName  String?
  country   String?
  city      String?
  dob       DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  categories PostCategory[]
  photo    Photo[]
  title     String
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PostCategory {
  id        Int      @id @default(autoincrement())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  categoryId Int
  category  Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  posts     PostCategory[]
}

model Photo {
  id       Int      @id @default(autoincrement())
  postId   Int
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}